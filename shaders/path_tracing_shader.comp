#version 460 core

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;


// Structs
struct Sphere
{
	vec4 pos;
	vec4 clr;
	float r;
};


// Bindings
layout(set = 1, binding = 0, std140) uniform Camera
{
	vec4 pos;
	vec4 dir;
	float fov;
} camera;

layout(set = 1, binding = 1, std430) buffer SphereBuffer
{
	Sphere[] sphere;
} sphere_buffer;

layout(set = 0, binding = 0, std430) buffer ColorBuffer
{
	vec4 pixel[];
} color_buffer;


void main()
{
	uint idx = gl_GlobalInvocationID.x;
	uint idy = gl_GlobalInvocationID.y;
	uint width = gl_NumWorkGroups.x;
	uint height = gl_NumWorkGroups.y;

	color_buffer.pixel[idx + idy * width].rgba = vec4(idx / width, idy / height, (idx - idy) / height, 1);
}
